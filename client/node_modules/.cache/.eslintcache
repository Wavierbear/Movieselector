[{"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\index.js":"1","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\App.js":"2","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\reducers\\index.js":"3","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Dashboard.js":"4","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\reducers\\authReducer.js":"5","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\actions\\index.js":"6","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\actions\\types.js":"7","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\General\\Header.js":"8","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\General\\Landing.js":"9","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\General\\AboutUs.js":"10","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Film\\MovieCard.js":"11","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Bruker\\Profil.js":"12","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Film\\MoviePoster.js":"13","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\General\\AboutUsCard.js":"14","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Film\\MovieList.js":"15","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Bruker\\ProfilContent.js":"16","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Film\\LikeMovie.js":"17","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Film\\MovieItem.js":"18","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Bruker\\ProfilMenu.js":"19","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Bruker\\ProfilData.js":"20","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Film\\MoviePref.js":"21","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\General\\OmApp.js":"22","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\reducers\\likeReducer.js":"23"},{"size":999,"mtime":1622413339626,"results":"24","hashOfConfig":"25"},{"size":1802,"mtime":1622397202252,"results":"26","hashOfConfig":"25"},{"size":295,"mtime":1618661717100,"results":"27","hashOfConfig":"25"},{"size":1835,"mtime":1622396426108,"results":"28","hashOfConfig":"25"},{"size":385,"mtime":1615951117635,"results":"29","hashOfConfig":"25"},{"size":872,"mtime":1622396777757,"results":"30","hashOfConfig":"25"},{"size":194,"mtime":1622396777758,"results":"31","hashOfConfig":"25"},{"size":2522,"mtime":1622413507436,"results":"32","hashOfConfig":"25"},{"size":844,"mtime":1622396777760,"results":"33","hashOfConfig":"25"},{"size":1508,"mtime":1622408472499,"results":"34","hashOfConfig":"25"},{"size":2853,"mtime":1622449565336,"results":"35","hashOfConfig":"25"},{"size":886,"mtime":1622395702703,"results":"36","hashOfConfig":"25"},{"size":1588,"mtime":1622449120297,"results":"37","hashOfConfig":"25"},{"size":764,"mtime":1622396777759,"results":"38","hashOfConfig":"25"},{"size":484,"mtime":1622449124647,"results":"39","hashOfConfig":"25"},{"size":933,"mtime":1622395702704,"results":"40","hashOfConfig":"25"},{"size":1142,"mtime":1622449917462,"results":"41","hashOfConfig":"25"},{"size":420,"mtime":1622449201329,"results":"42","hashOfConfig":"25"},{"size":2118,"mtime":1622408472498,"results":"43","hashOfConfig":"25"},{"size":1382,"mtime":1622395150791,"results":"44","hashOfConfig":"25"},{"size":7904,"mtime":1622449869408,"results":"45","hashOfConfig":"25"},{"size":2688,"mtime":1622396777760,"results":"46","hashOfConfig":"25"},{"size":415,"mtime":1618661708482,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"123savu",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\index.js",[],["100","101"],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\App.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\reducers\\index.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Dashboard.js",["102","103","104","105"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Col, Row, Card, Toast, Tab, Tabs } from \"react-bootstrap/\";\r\nimport Backgrunn from './General/bg-backgrunn.jpg';\r\n/*\r\n* Forfatter: Johannes Halvorsen\r\n*/\r\n// Det bruker skal se når de kommer inn på nettside når de er allerede logget it\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <Row style={{ height: \"100vh\" }}>\r\n        {\" \"}\r\n        {/*Bootstrap deler siden opp i 12 kolonner, sier jeg vil bruke 9 til ene */}\r\n        <Row className=\"col-12 justify-content-center\">\r\n          <Col className=\"col-10 mt-5 border\">\r\n            <h1 className=\"p-5 text-white\">Top picks for <i>{this.props.auth.name}</i></h1>\r\n          </Col>\r\n\r\n          <Col className=\"col-5 mt-5\">\r\n            <Card>\r\n              <Card.Header>Trending</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>deserunt mollit anim id est laborum</Card.Title>\r\n                <Card.Text>\r\n                Lorem ipsum dolor sit amet, consectetu\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col className=\"col-5 mt-5\">\r\n            <Card>\r\n              <Card.Header>New releases</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>deserunt mollit anim id est laborum</Card.Title>\r\n                <Card.Text>\r\n                Lorem ipsum dolor sit amet, consectetu\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { auth: state.auth }; //Henter auth fra reducers\r\n  //skjer noe magi, retunere til connect under\r\n} //Les i App.js hvordan funger\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\actions\\index.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\actions\\types.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\General\\Header.js",["106","107"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Navbar, Nav, Form} from \"react-bootstrap\";\r\nimport Logo from \"./logo.PNG\";\r\n\r\n/* \r\n\r\n @actor Mathias Berger \r\n\r\n*/ \r\nclass Header extends Component {\r\n  renderContent() {\r\n    switch (this.props.auth) {\r\n      case null:\r\n        return;\r\n      case false:\r\n        return (\r\n          <Button variant=\"primary\" a href=\"/auth/google\">\r\n            Login with Google\r\n          </Button>\r\n        );\r\n      default:\r\n        return [\r\n          <Nav style={{ float: \"right\" }} className=\"navbar m-0 p-0 \">\r\n          <a\r\n            className=\"nav-link dropdown-toggle \"\r\n            href=\"#\"\r\n            id=\"navbarDropdownMenuLink\"\r\n            role=\"button\"\r\n            data-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <img\r\n              src={\r\n                this.props.auth\r\n                  ? this.props.auth.bilde\r\n                  : \"https://cdn.iconscout.com/icon/premium/png-256-thumb/profile-1506810-1278719.png\"\r\n              }\r\n              style={{ width: \"50px\", height: \"50px\" }}\r\n              className=\"rounded-circle\"\r\n            />\r\n          </a>\r\n          <div className=\"dropdown-menu\">\r\n            <a className=\"dropdown-item\" href=\"/profil\">\r\n              Profil\r\n            </a>\r\n            <a className=\"dropdown-item\" href=\"/api/logout\">\r\n              Log Out\r\n            </a>\r\n          </div>\r\n        </Nav>\r\n        ];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Row\">\r\n        <div className=\"Col\">\r\n          <Navbar variant=\"dark\">\r\n            <Navbar.Brand href=\"/\">\r\n              MovieSelector\r\n              <img\r\n                alt=\"Logo bilde\"\r\n                src={Logo}\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className=\"ml-2\"\r\n              />\r\n            </Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"/about\">About</Nav.Link>\r\n              {this.props.auth ? <Nav.Link href=\"/film\">Film</Nav.Link> :<div/>}\r\n            </Nav>\r\n            <Form inline>\r\n              <h5 className=\"text-white pr-2\">\r\n                {this.props.auth ? this.props.auth.name : \"\"}\r\n              </h5>\r\n              {this.renderContent()}\r\n            </Form>\r\n          </Navbar>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\General\\Landing.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\General\\AboutUs.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Film\\MovieCard.js",["108","109","110","111","112"],"import React, { useEffect, useState } from \"react\";\r\nimport MoviePoster from \"./MoviePoster\";\r\nimport MovieList from \"./MovieList\";\r\nimport axios from \"axios\";\r\nimport LikeMovie from \"./LikeMovie\";\r\nimport Like from \"@material-ui/icons/ThumbUp\"; //bruk bootstrap icon?\r\nimport Dislike from \"@material-ui/icons/ThumbDown\";\r\n\r\n/*\r\n    Forfatter: Benjamin Nese\r\n*/\r\n\r\n//Et film objekt vises på skjermen\r\nconst MovieCard = () => {\r\n  const [likedMovie, setLikedMovie] = useState([]);\r\n  const [moviePoster, setMoviePoster] = useState([]);\r\n  const [counter, setCounter] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [selectedMovie, setSelectedMovie] = useState();\r\n\r\n  //TODO Så preferanse til bruker blir brukt for film vises og ikke bare en generell lenke\r\n  let url = `https://api.themoviedb.org/3/discover/movie?api_key=67eebbe4966f8175133a6a20f9206e7a`;\r\n\r\n  const getMovies = () => {\r\n    axios.get(url).then((res) => {\r\n      console.log(\r\n        res.data.results.map((movie) => {\r\n          return movie.title + movie.vote_average;\r\n        })\r\n      );\r\n      setMoviePoster(\r\n        res.data.results.map((name) => {\r\n          return <MoviePoster movie={name}></MoviePoster>;\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovies();\r\n  }, []); //kjøres ved opprettelse av objektet, samme som didStateMount\r\n\r\n  useEffect(() => {\r\n    setSelectedMovie(moviePoster[counter]);\r\n  }, [moviePoster]);\r\n\r\n  useEffect(() => {\r\n    setSelectedMovie(moviePoster[counter]);\r\n    if (counter > 8) {\r\n      setPage(page + 1);\r\n      url += `&page=${page}`;\r\n      getMovies();\r\n      setCounter(0);\r\n    }\r\n  }, [counter]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex flex-column justify-content-center text-white\">\r\n        <div className=\"m-auto pb-4\">\r\n          {selectedMovie}\r\n          {/*<LikeMovie onClick={()=>console.log(\"hello\")}/>*/}\r\n          <div className=\"m-auto pl-5 w-50\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-lg btn-success mr-5\" //Setter filmen inn i liste med resten av de som er likt\r\n              onClick={() => {\r\n                setCounter(counter + 1);\r\n                setLikedMovie((prevState) => [...prevState, selectedMovie]);\r\n              }}\r\n            >\r\n              <Like />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-lg btn-danger mr-5 \"\r\n              onClick={() => {\r\n                setCounter(counter + 1);\r\n              }}\r\n            >\r\n              <Dislike />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        Likte filmer\r\n        <ul>\r\n          {likedMovie.map((e) => (\r\n            <li>{e.props.movie.original_title}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Bruker\\Profil.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Film\\MoviePoster.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\General\\AboutUsCard.js",["113"],"//Side som bruker kommer til om ikke innlogget\r\nimport React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Logo from \"./logo.PNG\";\r\n// Lager et kort for å vise frem hver student\r\n// Skal ta en navn(Mathias Berger) feks, og tekst om personen. Samt et bilde.\r\n/* \r\n\r\n @actor Mathias Berger \r\n\r\n*/ \r\n\r\nexport const AboutUsCard = (props) => {\r\n  return (\r\n    <Card bg=\"primary\" text=\"white\" style={{ width: \"20%\", height: \"30%\" }}>\r\n      <img className=\"card-img-top\" src={props.imgURL} alt={props.name}/>\r\n      <Card.Header>{props.name}</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title>{props.studentNummer}</Card.Title>\r\n        <Card.Text>{props.desc}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AboutUsCard;\r\n","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Film\\MovieList.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Bruker\\ProfilContent.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Film\\LikeMovie.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Film\\MovieItem.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Bruker\\ProfilMenu.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Bruker\\ProfilData.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\Film\\MoviePref.js",["114","115","116","117","118"],"import { Col, Form, Button } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MoviePoster from \"./MoviePoster\";\r\n\r\n/*\r\n    Forfatter: Benjamin Nese\r\n    Preferanse for hver bruker over hvilken kategori, år, og rating de vil se filmer fra\r\n*/\r\nconst MoviePref = () => {\r\n  const [key, setKey] = useState(\"67eebbe4966f8175133a6a20f9206e7a\");\r\n  const [language, setLanguage] = useState(\"en-US\");\r\n  const [sort, setSort] = useState(\"popularity.desc\");\r\n  const [year, setYear] = useState([1985, 2021]);\r\n  // new Date(1995, 11, 17).toISOString().slice(0, 10), new Date(2021, 11, 17).toISOString().slice(0, 10)\r\n  const [rating, setRating] = useState([0, 10]);\r\n  const [pref, setPref] = useState([]);\r\n  const [moviePoster, setMoviePoster] = useState([]);\r\n\r\n  //TODO sorter liste lokalt istendenfor via url\r\n\r\n  //Concat en link med de forskjellige preferansene endret, her skulle vi ha implementert en bedre løsning\r\n  let url = `https://api.themoviedb.org/3/discover/movie?api_key=${key}&language=${language}&sort_by=${sort}&include_adult=false&include_video=false&page=1&release_date.gte=${year[0]}-01-01&release_date.lte=${year[1]}-01-01&vote_count.gte=500&vote_average.gte=${rating[0]}&vote_average.lte=${rating[1]}&with_genres=${pref}`;\r\n\r\n  useEffect(() => {\r\n    console.log(url); //hent ut år\r\n    axios.get(url).then((res) => {\r\n      console.log(\r\n        res.data.results.map((movie) => {\r\n          return movie.title + movie.vote_average;\r\n        })\r\n      );\r\n      setMoviePoster(\r\n        res.data.results.map((name) => {\r\n          return <MoviePoster movie={name}></MoviePoster>;\r\n        })\r\n      );\r\n    });\r\n  }, [rating]); //hver gang rating endres vil listen oppdateres\r\n\r\n  const reduxState = useSelector((state) => state.auth); //hente state fra store\r\n  // useDispatch() for oppdatere\r\n\r\n  const onCheckedGenre = (value) => {\r\n    console.log(value);\r\n    if (!pref.includes(value)) {\r\n      //hvis preferanse allerede er i state\r\n      setPref([...pref, value]);\r\n    }\r\n  };\r\n\r\n  const onSavePref = (e) => {\r\n    e.preventDefault(); //Vil unngå at nettleser automatisk lastest på nytt\r\n    const preferanse = {\r\n      //Opprett ny variabel som blir et database objekt\r\n      userId: reduxState.epost,\r\n      //looper gjennom alle preferansene\r\n      genres: pref.map((pre) => {\r\n        return { name: `${pre}` };\r\n      }),\r\n      years: year.map((year) => {\r\n        return { year: `${year}` };\r\n      }),\r\n      ratings: rating.map((rating) => {\r\n        return { rating: `${rating}` };\r\n      }),\r\n    }; \r\n\r\n    //Ny preferanse blir lastet opp til databasen via axios\r\n    //Skulle her ha lagt inn en sjekk for om bruker har preferanse inne, for så å heller oppdatert den\r\n    axios\r\n      .post(\"http://localhost:3000/movie_pref/add\", preferanse)\r\n      .then((res) => {\r\n        console.log(preferanse);\r\n        console.log(\"fra moviepref.js: \", res);\r\n      });\r\n\r\n    alert(\"Lagret\");\r\n    //window.location ='/'; //sender bruker tilbake når trykket lagre\r\n  };\r\n\r\n  //Test for å hente ut preferansene fra mongoDB\r\n  //TODO Funker ikke\r\n  const hent = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .get(`http://localhost:3000/movie_pref/${reduxState.epost}`)\r\n      .then((res) => {\r\n        for (var i = 0; i < res.data.genres.length; i++)\r\n          document.getElementById(res.data.genres[i].name).checked = true; //Setter alle filmpref fra\r\n        //mongoDB til gui\r\n        setRating(res.data.ratings.map((rating) => rating.rating));\r\n        setYear(res.data.years.map((year) => year.year));\r\n      });\r\n  };\r\n\r\n  //Test for å hente alle filmprefeanser i databasen\r\n  const hentAlle = () => {\r\n    axios.get(`http://localhost:3000/movie_pref`).then((res) => {\r\n      console.log(\"kjører hentalle\");\r\n      console.log(res.data);\r\n    });\r\n  };\r\n  const slettAlle = () => {\r\n    axios.get();\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-2 mb-5 bg-white\">\r\n      <h1 className=\"text-center\">Film Preferanse</h1>\r\n      <Form>\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Label>Sort</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              defaultValue=\"Popularity Desecending\"\r\n              onChange={(e) =>\r\n                setSort(e.target.options[e.target.options.selectedIndex].value)\r\n              }\r\n            >\r\n              <option value=\"popularity.desc\">Popularity</option>\r\n              <option value=\"vote_average.desc\">Rating</option>\r\n              <option value=\"release_date.desc\">Release Date</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Row>\r\n        <Form.Row className=\"m-2\">\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label=\"Action\"\r\n            id=\"28\"\r\n            value={\"28\"}\r\n            onChange={(e) => onCheckedGenre(e.target.value)}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label=\"Adventure\"\r\n            id=\"12\"\r\n            value={\"12\"}\r\n            onChange={(e) => onCheckedGenre(e.target.value)}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label=\"Animation\"\r\n            id=\"16\"\r\n            value={\"16\"}\r\n            onChange={(e) => onCheckedGenre(e.target.value)}\r\n          />\r\n        </Form.Row>\r\n        <Form.Row className=\"m-2\">\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label=\"Comedy\"\r\n            id=\"35\"\r\n            value={\"35\"}\r\n            onChange={(e) => onCheckedGenre(e.target.value)}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label=\"Thriller\"\r\n            id=\"53\"\r\n            value={\"53\"}\r\n            onChange={(e) => onCheckedGenre(e.target.value)}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label=\"Romance\"\r\n            id=\"10749\"\r\n            value={\"10749\"}\r\n            onChange={(e) => onCheckedGenre(e.target.value)}\r\n          />\r\n        </Form.Row>\r\n        {/* <RangeBar \r\n            title=\"Year\" \r\n            id=\"year\" \r\n            min={1985} \r\n            max={2021} \r\n            ref={valgSlider} \r\n            onChange={fokus}\r\n            /> */}\r\n\r\n        <Typography id=\"range-year\">\r\n          <b>Year:</b> {year[0]}-{year[1]}\r\n        </Typography>\r\n        <Slider\r\n          style={{ width: 300 }}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"range-year\"\r\n          value={year}\r\n          min={1985}\r\n          max={2021}\r\n          onChange={(e, value) => setYear(value)}\r\n        />\r\n        <Typography id=\"range-rating\">\r\n          <b>Rating:</b> {rating[0]}-{rating[1]}\r\n        </Typography>\r\n        <Slider\r\n          style={{ width: 300 }}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"range-rating\"\r\n          value={rating}\r\n          min={0}\r\n          max={10}\r\n          onChange={(e, value) => setRating(value)}\r\n        />\r\n      </Form>\r\n      <Button onClick={(e) => onSavePref(e)}>lagre</Button>\r\n      <Button onClick={(e) => hent(e)}>hent</Button>\r\n      <div id=\"p1\">{moviePoster[Math.floor(Math.random() * 5)]}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default MoviePref;\r\n\r\n//TODO FIKS FOKUS PÅ HVILKEN KNAPP, SAMT GENERALISER DE I RANGEBAR\r\n\r\n// const RangeBar =(props) =>{\r\n//     return(\r\n//      <div>\r\n//         <Typography id={props.id}>\r\n//             <b>{props.title}:</b>\r\n//         </Typography>\r\n//         <Slider\r\n//             style={{width:300}}\r\n//             valueLabelDisplay=\"auto\"\r\n//             aria-labelledby=\"year\"\r\n//             value={props.value}\r\n//             min={props.min}\r\n//             max={props.max}\r\n//             onChange={(e)=>handleChange}\r\n//          />\r\n//     </div>\r\n//     )\r\n// }\r\n","C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\components\\General\\OmApp.js",[],"C:\\Users\\benja\\Desktop\\app2000\\APP2000MovieSelector\\client\\src\\reducers\\likeReducer.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":3,"column":26,"nodeType":"125","messageId":"126","endLine":3,"endColumn":31},{"ruleId":"123","severity":1,"message":"127","line":3,"column":33,"nodeType":"125","messageId":"126","endLine":3,"endColumn":36},{"ruleId":"123","severity":1,"message":"128","line":3,"column":38,"nodeType":"125","messageId":"126","endLine":3,"endColumn":42},{"ruleId":"123","severity":1,"message":"129","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":25,"column":11,"nodeType":"132","endLine":32,"endColumn":12},{"ruleId":"133","severity":1,"message":"134","line":33,"column":13,"nodeType":"132","endLine":41,"endColumn":15},{"ruleId":"123","severity":1,"message":"135","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":17},{"ruleId":"123","severity":1,"message":"136","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":17},{"ruleId":"137","severity":1,"message":"138","line":41,"column":6,"nodeType":"139","endLine":41,"endColumn":8,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":45,"column":6,"nodeType":"139","endLine":45,"endColumn":19,"suggestions":"142"},{"ruleId":"137","severity":1,"message":"143","line":51,"column":14,"nodeType":"144","endLine":51,"endColumn":29},{"ruleId":"123","severity":1,"message":"145","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":12},{"ruleId":"123","severity":1,"message":"146","line":14,"column":15,"nodeType":"125","messageId":"126","endLine":14,"endColumn":21},{"ruleId":"123","severity":1,"message":"147","line":15,"column":20,"nodeType":"125","messageId":"126","endLine":15,"endColumn":31},{"ruleId":"137","severity":1,"message":"148","line":42,"column":6,"nodeType":"139","endLine":42,"endColumn":14,"suggestions":"149"},{"ruleId":"123","severity":1,"message":"150","line":102,"column":9,"nodeType":"125","messageId":"126","endLine":102,"endColumn":17},{"ruleId":"123","severity":1,"message":"151","line":108,"column":9,"nodeType":"125","messageId":"126","endLine":108,"endColumn":18},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'Toast' is defined but never used.","Identifier","unusedVar","'Tab' is defined but never used.","'Tabs' is defined but never used.","'Backgrunn' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'MovieList' is defined but never used.","'LikeMovie' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMovies'. Either include it or remove the dependency array.","ArrayExpression",["154"],"React Hook useEffect has a missing dependency: 'counter'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSelectedMovie' needs the current value of 'counter'.",["155"],"Assignments to the 'url' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","TemplateLiteral","'Logo' is defined but never used.","'setKey' is assigned a value but never used.","'setLanguage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["156"],"'hentAlle' is assigned a value but never used.","'slettAlle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [getMovies]",{"range":"163","text":"164"},"Update the dependencies array to be: [counter, moviePoster]",{"range":"165","text":"166"},"Update the dependencies array to be: [rating, url]",{"range":"167","text":"168"},[1286,1288],"[getMovies]",[1427,1440],"[counter, moviePoster]",[1841,1849],"[rating, url]"]