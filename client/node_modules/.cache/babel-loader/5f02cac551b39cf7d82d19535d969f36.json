{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benja\\\\Desktop\\\\app2000\\\\APP2000MovieSelector\\\\client\\\\src\\\\components\\\\Film\\\\MoviePref.js\",\n    _s = $RefreshSig$();\n\nimport { Col, Form, Button } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MoviePoster from './MoviePoster';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MoviePref = () => {\n  _s();\n\n  const [key, setKey] = useState('67eebbe4966f8175133a6a20f9206e7a');\n  const [language, setLanguage] = useState('en-US');\n  const [sort, setSort] = useState('popularity.desc');\n  const [year, setYear] = useState([1985, 2021]); // new Date(1995, 11, 17).toISOString().slice(0, 10), new Date(2021, 11, 17).toISOString().slice(0, 10)\n\n  const [rating, setRating] = useState([0, 10]);\n  const [pref, setPref] = useState([]);\n  const [moviePoster, setMoviePoster] = useState([]); //hent id assoisert med kategori https://api.themoviedb.org/3/genre/movie/list?api_key=67eebbe4966f8175133a6a20f9206e7a&language=en-US\n  //TODO sorter liste lokalt istendenfor via url\n\n  let url = `https://api.themoviedb.org/3/discover/movie?api_key=${key}&language=${language}&sort_by=${sort}&include_adult=false&include_video=false&page=1&release_date.gte=${year[0]}-01-01&release_date.lte=${year[1]}-01-01&vote_count.gte=500&vote_average.gte=${rating[0]}&vote_average.lte=${rating[1]}&with_genres=${pref}`;\n  const res = null;\n  useEffect(() => {\n    console.log(url); //hent ut år\n\n    axios.get(url).then(res => {\n      console.log(res.data.results.map(movie => {\n        return movie.title + movie.vote_average;\n      }));\n      setMoviePoster(res.data.results.map(name => {\n        return /*#__PURE__*/_jsxDEV(MoviePoster, {\n          movie: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 64\n        }, this);\n      }));\n    });\n  }, [rating]); //aktivere på alle type preferas endring?\n\n  const reduxState = useSelector(state => state.auth); //hente state fra store\n  // useDispatch() for oppdatere\n\n  const onCheckedGenre = value => {\n    console.log(value);\n\n    if (!pref.includes(value)) {\n      //hvis preferanse allerede er i state\n      setPref([...pref, value]);\n    }\n  };\n\n  const onSavePref = e => {\n    e.preventDefault();\n    const preferanse = {\n      userId: reduxState.userEmail,\n      genres: pref.map(pre => {\n        return {\n          name: `${pre}`\n        };\n      })\n    }; // console.log(axios.get('http://localhost:3000/movie_pref/6078718431f0380267753')\n    //     .then((res)=>console.log(res.status)))\n\n    axios.post('http://localhost:3000/movie_pref/add', preferanse).then(res => {\n      console.log(preferanse);\n      console.log('fra moviepref.js: ', res);\n    });\n    alert(\"Lagret\"); //window.location ='/'; //sender bruker tilbake når trykket lagre\n  };\n\n  const hent = e => {\n    e.preventDefault();\n    console.log(url);\n    axios.get(`http://localhost:3000/movie_pref/${reduxState.userEmail}`).then(res => {});\n  };\n\n  const hentAlle = () => {\n    axios.get(`http://localhost:3000/movie_pref`).then(res => {\n      document.getElementById(\"p1\").innerHTML = JSON.stringify(res.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-2 mb-5 bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Film Preferanse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Sort\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            defaultValue: \"Popularity Desecending\",\n            onChange: e => setSort(e.target.options[e.target.options.selectedIndex].value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"popularity.desc\",\n              children: \"Popularity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"vote_average.desc\",\n              children: \"Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"release_date.desc\",\n              children: \"Release Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"m-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"Action\",\n          value: \"28\",\n          onChange: e => onCheckedGenre(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"Adventure\",\n          value: \"12\",\n          onChange: e => onCheckedGenre(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"Animation\",\n          value: \"16\",\n          onChange: e => onCheckedGenre(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"m-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"Comedy\",\n          value: \"35\",\n          onChange: e => onCheckedGenre(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"Thriller\",\n          value: \"53\",\n          onChange: e => onCheckedGenre(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"Romance\",\n          value: \"10749\",\n          onChange: e => onCheckedGenre(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        id: \"range-year\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), \" \", year[0], \"-\", year[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        style: {\n          width: 300\n        },\n        valueLabelDisplay: \"auto\",\n        \"aria-labelledby\": \"range-year\",\n        value: year,\n        min: 1985,\n        max: 2021,\n        onChange: (e, value) => setYear(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        id: \"range-rating\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Rating:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), \" \", rating[0], \"-\", rating[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        style: {\n          width: 300\n        },\n        valueLabelDisplay: \"auto\",\n        \"aria-labelledby\": \"range-rating\",\n        value: rating,\n        min: 0,\n        max: 10,\n        onChange: (e, value) => setRating(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: e => onSavePref(e),\n      children: \"lagre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"p1\",\n      children: moviePoster[Math.floor(Math.random() * 5)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MoviePref, \"e49FG2HT9vfrnsBpG2vqM/nwJVc=\", false, function () {\n  return [useSelector];\n});\n\n_c = MoviePref;\nexport default MoviePref; //TODO FIKS FOKUS PÅ HVILKEN KNAPP, SAMT GENERALISER DE I RANGEBAR\n// const RangeBar =(props) =>{\n//     return(\n//      <div>\n//         <Typography id={props.id}>\n//             <b>{props.title}:</b>\n//         </Typography>   \n//         <Slider\n//             style={{width:300}}\n//             valueLabelDisplay=\"auto\"\n//             aria-labelledby=\"year\"\n//             value={props.value}\n//             min={props.min}\n//             max={props.max}\n//             onChange={(e)=>handleChange}\n//          />\n//     </div>\n//     )\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePref\");","map":{"version":3,"sources":["C:/Users/benja/Desktop/app2000/APP2000MovieSelector/client/src/components/Film/MoviePref.js"],"names":["Col","Form","Button","useState","useEffect","Slider","Typography","axios","useSelector","useDispatch","MoviePoster","MoviePref","key","setKey","language","setLanguage","sort","setSort","year","setYear","rating","setRating","pref","setPref","moviePoster","setMoviePoster","url","res","console","log","get","then","data","results","map","movie","title","vote_average","name","reduxState","state","auth","onCheckedGenre","value","includes","onSavePref","e","preventDefault","preferanse","userId","userEmail","genres","pre","post","alert","hent","hentAlle","document","getElementById","innerHTML","JSON","stringify","target","options","selectedIndex","width","Math","floor","random"],"mappings":"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","sourcesContent":["import {Col, Form, Button} from 'react-bootstrap';\r\nimport {useState, useEffect} from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport MoviePoster from './MoviePoster';\r\n\r\nconst MoviePref = () =>{\r\n\r\n    const [key, setKey] = useState ('67eebbe4966f8175133a6a20f9206e7a');\r\n    const [language, setLanguage] = useState('en-US')\r\n    const [sort, setSort] = useState('popularity.desc');\r\n    const [year, setYear] = useState([1985,2021]); \r\n    // new Date(1995, 11, 17).toISOString().slice(0, 10), new Date(2021, 11, 17).toISOString().slice(0, 10)\r\n    const [rating, setRating] = useState([0,10]);\r\n    const [pref, setPref] = useState([]);\r\n    const [moviePoster, setMoviePoster] = useState([]);\r\n    //hent id assoisert med kategori https://api.themoviedb.org/3/genre/movie/list?api_key=67eebbe4966f8175133a6a20f9206e7a&language=en-US\r\n\r\n    //TODO sorter liste lokalt istendenfor via url\r\n    let url = `https://api.themoviedb.org/3/discover/movie?api_key=${key}&language=${language}&sort_by=${sort}&include_adult=false&include_video=false&page=1&release_date.gte=${year[0]}-01-01&release_date.lte=${year[1]}-01-01&vote_count.gte=500&vote_average.gte=${rating[0]}&vote_average.lte=${rating[1]}&with_genres=${pref}`;\r\n    const res = null;\r\n    useEffect (()=>{\r\n        console.log(url); //hent ut år\r\n        axios.get(url)\r\n        .then(res =>{\r\n            console.log(res.data.results.map(movie=>{return (movie.title +  movie.vote_average)}));\r\n            setMoviePoster(res.data.results.map(name=>{return (<MoviePoster movie = {name} ></MoviePoster> )}));\r\n        });\r\n    },[rating]); //aktivere på alle type preferas endring?\r\n\r\n    \r\n\r\n    const reduxState = useSelector((state) => state.auth); //hente state fra store\r\n                    // useDispatch() for oppdatere\r\n \r\n    const onCheckedGenre =(value) =>{\r\n        console.log(value);\r\n        if(!pref.includes(value)) { //hvis preferanse allerede er i state\r\n            setPref([...pref, value])\r\n        }\r\n      \r\n    }\r\n\r\n    const onSavePref =(e) =>{\r\n        e.preventDefault();\r\n            const preferanse = {\r\n                userId: reduxState.userEmail,\r\n                genres: (\r\n                    pref.map(pre =>{\r\n                        return(\r\n                            {name: `${pre}`}\r\n                        )\r\n                    })\r\n                )    \r\n            }\r\n        // console.log(axios.get('http://localhost:3000/movie_pref/6078718431f0380267753')\r\n        //     .then((res)=>console.log(res.status)))\r\n\r\n        axios.post('http://localhost:3000/movie_pref/add', preferanse)\r\n            .then(res => {\r\n                console.log(preferanse);\r\n                console.log('fra moviepref.js: ', res)\r\n            });\r\n\r\n        alert(\"Lagret\");\r\n        //window.location ='/'; //sender bruker tilbake når trykket lagre\r\n       \r\n    }\r\n\r\n    const hent= (e) =>{\r\n        e.preventDefault();\r\n        console.log(url);\r\n        axios.get(`http://localhost:3000/movie_pref/${reduxState.userEmail}`)\r\n        .then(res => {\r\n            \r\n        });\r\n    };\r\n\r\n    const hentAlle=() =>{\r\n        axios.get(`http://localhost:3000/movie_pref`)\r\n        .then(res => {\r\n            document.getElementById(\"p1\").innerHTML = JSON.stringify(res.data);\r\n        });\r\n    };\r\n\r\n   \r\n    return(\r\n        <div className=\"p-2 mb-5 bg-white\">\r\n        <h1 className=\"text-center\">Film Preferanse</h1>\r\n        <Form>\r\n        <Form.Row>\r\n        <Col>\r\n            <Form.Label>Sort</Form.Label>\r\n            <Form.Control as=\"select\" defaultValue=\"Popularity Desecending\" onChange={(e)=>setSort(e.target.options[e.target.options.selectedIndex].value)}>\r\n                <option value=\"popularity.desc\">Popularity</option>\r\n                <option value=\"vote_average.desc\">Rating</option>\r\n                <option value=\"release_date.desc\">Release Date</option>\r\n            </Form.Control>\r\n        </Col>\r\n        </Form.Row>\r\n        <Form.Row className =\"m-2\">\r\n            <Form.Check type=\"checkbox\" label=\"Action\" value={\"28\"}  onChange={(e)=>onCheckedGenre(e.target.value)}/>\r\n            <Form.Check type=\"checkbox\" label=\"Adventure\" value={\"12\"}  onChange={(e)=>onCheckedGenre(e.target.value)}/>\r\n            <Form.Check type=\"checkbox\" label=\"Animation\" value={\"16\"}  onChange={(e)=>onCheckedGenre(e.target.value)}/>\r\n            \r\n        </Form.Row>\r\n        <Form.Row className =\"m-2\">\r\n            <Form.Check type=\"checkbox\" label=\"Comedy\" value={\"35\"}  onChange={(e)=>onCheckedGenre(e.target.value)}/>  \r\n            <Form.Check type=\"checkbox\" label=\"Thriller\" value={\"53\"}  onChange={(e)=>onCheckedGenre(e.target.value)}/>\r\n            <Form.Check type=\"checkbox\" label=\"Romance\" value={\"10749\"}  onChange={(e)=>onCheckedGenre(e.target.value)}/>  \r\n        </Form.Row>\r\n        {/* <RangeBar \r\n          title=\"Year\" \r\n          id=\"year\" \r\n          min={1985} \r\n          max={2021} \r\n          ref={valgSlider} \r\n          onChange={fokus}\r\n        /> */}\r\n    \r\n        <Typography id=\"range-year\">\r\n            <b>Year:</b> {year[0]}-{year[1]}\r\n        </Typography>   \r\n       <Slider \r\n            style={{width:300}}\r\n            valueLabelDisplay=\"auto\"\r\n            aria-labelledby=\"range-year\"\r\n            value={year}\r\n            min={1985}\r\n            max={2021}\r\n            onChange={(e, value)=>setYear(value)}\r\n       />\r\n       <Typography id=\"range-rating\">\r\n            <b>Rating:</b> {rating[0]}-{rating[1]}\r\n        </Typography>   \r\n       <Slider \r\n            style={{width:300}}\r\n            valueLabelDisplay=\"auto\"\r\n            aria-labelledby=\"range-rating\"\r\n            value={rating}\r\n            min={0}\r\n            max={10}\r\n            onChange={(e, value)=>setRating(value)}\r\n       />\r\n       \r\n      </Form>\r\n            <Button onClick={(e) => onSavePref(e)}>lagre</Button>\r\n            <div id=\"p1\">{moviePoster[Math.floor(Math.random() * 5)]}</div>\r\n      </div>\r\n    );\r\n};\r\nexport default MoviePref;\r\n\r\n //TODO FIKS FOKUS PÅ HVILKEN KNAPP, SAMT GENERALISER DE I RANGEBAR\r\n\r\n    // const RangeBar =(props) =>{\r\n    //     return(\r\n    //      <div>\r\n    //         <Typography id={props.id}>\r\n    //             <b>{props.title}:</b>\r\n    //         </Typography>   \r\n    //         <Slider\r\n    //             style={{width:300}}\r\n    //             valueLabelDisplay=\"auto\"\r\n    //             aria-labelledby=\"year\"\r\n    //             value={props.value}\r\n    //             min={props.min}\r\n    //             max={props.max}\r\n    //             onChange={(e)=>handleChange}\r\n    //          />\r\n    //     </div>\r\n    //     )\r\n    // }"]},"metadata":{},"sourceType":"module"}