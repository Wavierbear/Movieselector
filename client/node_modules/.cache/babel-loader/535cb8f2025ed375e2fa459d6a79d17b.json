{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benja\\\\Desktop\\\\app2000\\\\APP2000MovieSelector\\\\client\\\\src\\\\components\\\\MovieCard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport MoviePoster from \"./MoviePoster\";\nimport { Button } from \"react-bootstrap\";\nimport MoviePref from \"./MoviePref\";\nimport movieDB from \"./movieDB\"; //Et film objekt vises på skjermen\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MovieCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      selectedVideo: null\n    };\n\n    this.onTermSubmit = async querry => {\n      const response = await movieDB.get('/search/movie', {\n        params: {\n          api_key: '67eebbe4966f8175133a6a20f9206e7a',\n          query: querry\n        }\n      });\n      this.setState({\n        videos: response.data.results,\n        selectedVideo: response.data.results[0] //default video når nytt søk\n\n      });\n    };\n\n    this.onVideoSelect = video => {\n      this.setState({\n        selectedVideo: video\n      });\n      console.log({\n        video\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.onTermSubmit(' '); //Tomt søkt når side lastest\n  }\n\n  render() {\n    // const [movieTitle, setMovieTitle] = useState();\n    // const [movieDes, setMovieDes] = useState();\n    // const [moviePoster, setMoviePoster] = useState();\n    // const [count, setCount] = useState(566230);\n    // const baseImgUrl = \"https://image.tmdb.org/t/p\";\n    // const size = \"w500\";\n    // const API_KEY = \"dea81014c2ec4aeceb134efbf3cfff1f\";\n    // const onClick1 = () => {\n    //   setCount(count + 1);\n    //   getMovies(count);\n    // };\n    // const onClick2 = () => {\n    //   setCount(count - 1);\n    //   getMovies(count);\n    // };\n    // const getMovies = async (id) => {\n    //   let response;\n    //   let data;\n    //   do {\n    //     response = await fetch(\n    //       `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    //     );\n    //     data = await response.json();\n    //     let ikkefunnet = response.status == 404;\n    //     let ikkeFunnetBilde = data.poster_path == undefined;\n    //     if (ikkefunnet || ikkeFunnetBilde) {\n    //       id++;\n    //     }\n    //     console.log(\"etter\" + id);\n    //   } while (response.status == 404 || data.poster_path == undefined);\n    //   setMovieTitle(data.title);\n    //   setMovieDes(data.overview);\n    //   setMoviePoster(data.poster_path);\n    // };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MoviePref, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(MoviePoster // image={moviePoster}\n        // name={movieTitle}\n        // des={movieDes}\n        // onClickLiker={onClick1}\n        // onClickMisliker={onClick2}\n        , {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default MovieCard;","map":{"version":3,"sources":["C:/Users/benja/Desktop/app2000/APP2000MovieSelector/client/src/components/MovieCard.js"],"names":["React","useState","useEffect","MoviePoster","Button","MoviePref","movieDB","MovieCard","Component","state","videos","selectedVideo","onTermSubmit","querry","response","get","params","api_key","query","setState","data","results","onVideoSelect","video","console","log","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;;;AACA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AAACC,MAAAA,MAAM,EAAE,EAAT;AAAaC,MAAAA,aAAa,EAAE;AAA5B,KAF8B;;AAAA,SAQtCC,YARsC,GAQvB,MAAMC,MAAN,IAAe;AAC5B,YAAMC,QAAQ,GAAG,MAAMR,OAAO,CAACS,GAAR,CAAY,eAAZ,EAA4B;AACjDC,QAAAA,MAAM,EAAE;AACLC,UAAAA,OAAO,EAAE,kCADJ;AAELC,UAAAA,KAAK,EAAEL;AAFF;AADyC,OAA5B,CAAvB;AAOF,WAAKM,QAAL,CAAc;AACVT,QAAAA,MAAM,EAAEI,QAAQ,CAACM,IAAT,CAAcC,OADZ;AAEVV,QAAAA,aAAa,EAAEG,QAAQ,CAACM,IAAT,CAAcC,OAAd,CAAsB,CAAtB,CAFL,CAE8B;;AAF9B,OAAd;AAIC,KApBqC;;AAAA,SAqBtCC,aArBsC,GAqBvBC,KAAD,IAAU;AACtB,WAAKJ,QAAL,CAAc;AAACR,QAAAA,aAAa,EAAEY;AAAhB,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,QAAAA;AAAD,OAAZ;AACH,KAxBuC;AAAA;;AAItCG,EAAAA,iBAAiB,GAAE;AACjB,SAAKd,YAAL,CAAkB,GAAlB,EADiB,CACM;AACxB;;AAqBDe,EAAAA,MAAM,GAAE;AACR;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,wBACE;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA,+BACE,QAAC,WAAD,CACE;AACA;AACA;AACA;AACA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAnFuC;;AAqFxC,eAAepB,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MoviePoster from \"./MoviePoster\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport MoviePref from \"./MoviePref\";\r\nimport movieDB from \"./movieDB\";\r\n\r\n//Et film objekt vises på skjermen\r\nclass MovieCard extends React.Component {\r\n\r\n  state = {videos: [], selectedVideo: null};\r\n\r\n  componentDidMount(){\r\n    this.onTermSubmit(' ') //Tomt søkt når side lastest\r\n  }\r\n\r\n  onTermSubmit = async querry =>{\r\n    const response = await movieDB.get('/search/movie',{\r\n      params: {\r\n         api_key: '67eebbe4966f8175133a6a20f9206e7a',\r\n         query: querry\r\n      }\r\n  });\r\n\r\n  this.setState({\r\n      videos: response.data.results,\r\n      selectedVideo: response.data.results[0] //default video når nytt søk\r\n  });\r\n  };\r\n  onVideoSelect=(video) =>{\r\n    this.setState({selectedVideo: video});\r\n    console.log({video});\r\n};\r\n\r\n\r\n  render(){\r\n  // const [movieTitle, setMovieTitle] = useState();\r\n  // const [movieDes, setMovieDes] = useState();\r\n  // const [moviePoster, setMoviePoster] = useState();\r\n  // const [count, setCount] = useState(566230);\r\n\r\n  // const baseImgUrl = \"https://image.tmdb.org/t/p\";\r\n  // const size = \"w500\";\r\n  // const API_KEY = \"dea81014c2ec4aeceb134efbf3cfff1f\";\r\n\r\n\r\n  // const onClick1 = () => {\r\n  //   setCount(count + 1);\r\n  //   getMovies(count);\r\n  // };\r\n\r\n  // const onClick2 = () => {\r\n  //   setCount(count - 1);\r\n  //   getMovies(count);\r\n  // };\r\n\r\n  // const getMovies = async (id) => {\r\n  //   let response;\r\n  //   let data;\r\n  //   do {\r\n  //     response = await fetch(\r\n  //       `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\r\n  //     );\r\n  //     data = await response.json();\r\n  //     let ikkefunnet = response.status == 404;\r\n  //     let ikkeFunnetBilde = data.poster_path == undefined;\r\n  //     if (ikkefunnet || ikkeFunnetBilde) {\r\n  //       id++;\r\n  //     }\r\n  //     console.log(\"etter\" + id);\r\n  //   } while (response.status == 404 || data.poster_path == undefined);\r\n\r\n  //   setMovieTitle(data.title);\r\n  //   setMovieDes(data.overview);\r\n  //   setMoviePoster(data.poster_path);\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <MoviePref/>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <MoviePoster\r\n          // image={moviePoster}\r\n          // name={movieTitle}\r\n          // des={movieDes}\r\n          // onClickLiker={onClick1}\r\n          // onClickMisliker={onClick2}\r\n        ></MoviePoster>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n}\r\nexport default MovieCard;\r\n"]},"metadata":{},"sourceType":"module"}