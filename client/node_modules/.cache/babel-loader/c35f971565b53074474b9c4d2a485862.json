{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benja\\\\Desktop\\\\app2000\\\\APP2000MovieSelector\\\\client\\\\src\\\\components\\\\Film\\\\MovieCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MoviePoster from \"./MoviePoster\";\nimport MovieList from './MovieList'; //Et film objekt vises på skjermen\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieCard = props => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null); //TODO FIX her\n\n  let url = `https://api.themoviedb.org/3/discover/movie?api_key=${key}&language=${language}&sort_by=${sort}&include_adult=false&include_video=false&page=1&release_date.gte=${year[0]}-01-01&release_date.lte=${year[1]}-01-01&vote_count.gte=500&vote_average.gte=${rating[0]}&vote_average.lte=${rating[1]}&with_genres=${pref}`;\n  const res = null;\n  useEffect(() => {\n    console.log(url); //hent ut år\n\n    axios.get(url).then(res => {\n      console.log(res.data.results.map(movie => {\n        return movie.title + movie.vote_average;\n      }));\n      setMoviePoster(res.data.results.map(name => {\n        return /*#__PURE__*/_jsxDEV(MoviePoster, {\n          movie: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 64\n        }, this);\n      }));\n    });\n  }, []); //aktivere på alle type preferanse endring?\n\n  const baseImgUrl = \"https://image.tmdb.org/t/p\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column justify-content-center text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"hei\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), console.log(props.innhold)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieCard, \"PO+XgOji7E32nFJj3H5UPLPJ7w4=\");\n\n_c = MovieCard;\nexport default MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["C:/Users/benja/Desktop/app2000/APP2000MovieSelector/client/src/components/Film/MovieCard.js"],"names":["React","useEffect","useState","MoviePoster","MovieList","MovieCard","props","movies","setMovies","selectedMovie","setSelectedMovie","url","key","language","sort","year","rating","pref","res","console","log","axios","get","then","data","results","map","movie","title","vote_average","setMoviePoster","name","baseImgUrl","innhold"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,IAAD,CAAlD,CAHyB,CAK5B;;AACA,MAAIS,GAAG,GAAI,uDAAsDC,GAAI,aAAYC,QAAS,YAAWC,IAAK,oEAAmEC,IAAI,CAAC,CAAD,CAAI,2BAA0BA,IAAI,CAAC,CAAD,CAAI,8CAA6CC,MAAM,CAAC,CAAD,CAAI,qBAAoBA,MAAM,CAAC,CAAD,CAAI,gBAAeC,IAAK,EAAhU;AACG,QAAMC,GAAG,GAAG,IAAZ;AACAjB,EAAAA,SAAS,CAAE,MAAI;AACXkB,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ,EADW,CACO;;AAClBU,IAAAA,KAAK,CAACC,GAAN,CAAUX,GAAV,EACCY,IADD,CACML,GAAG,IAAG;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACM,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqBC,KAAK,IAAE;AAAC,eAAQA,KAAK,CAACC,KAAN,GAAeD,KAAK,CAACE,YAA7B;AAA2C,OAAxE,CAAZ;AACAC,MAAAA,cAAc,CAACZ,GAAG,CAACM,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqBK,IAAI,IAAE;AAAC,4BAAQ,QAAC,WAAD;AAAa,UAAA,KAAK,EAAIA;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAAR;AAAsD,OAAlF,CAAD,CAAd;AACH,KAJD;AAKH,GAPQ,EAOP,EAPO,CAAT,CARyB,CAelB;;AACP,QAAMC,UAAU,GAAG,4BAAnB;AACA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,sDAAf;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEIb,OAAO,CAACC,GAAR,CAAYd,KAAK,CAAC2B,OAAlB,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA7BD;;GAAM5B,S;;KAAAA,S;AA+BN,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport MoviePoster from \"./MoviePoster\";\r\nimport MovieList from './MovieList';\r\n\r\n//Et film objekt vises på skjermen\r\nconst MovieCard = (props) => {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [selectedMovie, setSelectedMovie] = useState(null);\r\n\r\n //TODO FIX her\r\n let url = `https://api.themoviedb.org/3/discover/movie?api_key=${key}&language=${language}&sort_by=${sort}&include_adult=false&include_video=false&page=1&release_date.gte=${year[0]}-01-01&release_date.lte=${year[1]}-01-01&vote_count.gte=500&vote_average.gte=${rating[0]}&vote_average.lte=${rating[1]}&with_genres=${pref}`;\r\n    const res = null;\r\n    useEffect (()=>{\r\n        console.log(url); //hent ut år\r\n        axios.get(url)\r\n        .then(res =>{\r\n            console.log(res.data.results.map(movie=>{return (movie.title +  movie.vote_average)}));\r\n            setMoviePoster(res.data.results.map(name=>{return (<MoviePoster movie = {name} ></MoviePoster> )}));\r\n        });\r\n    },[]); //aktivere på alle type preferanse endring?\r\n    const baseImgUrl = \"https://image.tmdb.org/t/p\";\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex flex-column justify-content-center text-white\">\r\n                <div>\r\n                    <h1>hei</h1>\r\n                   {console.log(props.innhold)}\r\n                </div>\r\n              \r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default MovieCard;\r\n"]},"metadata":{},"sourceType":"module"}